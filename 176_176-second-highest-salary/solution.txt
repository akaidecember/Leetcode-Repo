// Link: https://leetcode.com/problems/second-highest-salary/description
// Description
// Table:
// Employee
// +-------------+------+
// | Column Name | Type |
// +-------------+------+
// | id          | int  |
// | salary      | int  |
// +-------------+------+
// id is the primary key (column with unique values) for this table.
// Each row of this table contains information about the salary of an employee.
// Write a solution to find the second highest
// distinct
// salary from the
// Employee
// table. If there is no second highest salary, return
// null (return None in Pandas)
// .
// The result format is in the following example.
// Example 1:
// Input:
// Employee table:
// +----+--------+
// | id | salary |
// +----+--------+
// | 1  | 100    |
// | 2  | 200    |
// | 3  | 300    |
// +----+--------+
// Output:
// +---------------------+
// | SecondHighestSalary |
// +---------------------+
// | 200                 |
// +---------------------+
// Example 2:
// Input:
// Employee table:
// +----+--------+
// | id | salary |
// +----+--------+
// | 1  | 100    |
// +----+--------+
// Output:
// +---------------------+
// | SecondHighestSalary |
// +---------------------+
// | null                |
// +---------------------+

import pandas as pd

def second_highest_salary(employee: pd.DataFrame) -> pd.DataFrame:
    df = employee.drop_duplicates(subset='salary').sort_values(by='salary', ascending=False)
    if len(df) < 2:
        return pd.DataFrame({'SecondHighestSalary' : [None]})
    return pd.DataFrame({'SecondHighestSalary' : [df.iloc[1]['salary']]})